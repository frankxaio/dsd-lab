|top
clk => clk.IN3
rst_n => rst_n.IN3
a => a.IN1
b => b.IN1
led[0] <= parking_lot_counter:lot_m0.led
led[1] <= parking_lot_counter:lot_m0.led
led[2] <= parking_lot_counter:lot_m0.led
led[3] <= parking_lot_counter:lot_m0.led
led[4] <= parking_lot_counter:lot_m0.led
led[5] <= parking_lot_counter:lot_m0.led
led[6] <= parking_lot_counter:lot_m0.led
led[7] <= parking_lot_counter:lot_m0.led
seg_out0[0] <= scan:scan_m0.seg_out0[0]
seg_out0[1] <= scan:scan_m0.seg_out0[1]
seg_out0[2] <= scan:scan_m0.seg_out0[2]
seg_out0[3] <= scan:scan_m0.seg_out0[3]
seg_out0[4] <= scan:scan_m0.seg_out0[4]
seg_out0[5] <= scan:scan_m0.seg_out0[5]
seg_out0[6] <= scan:scan_m0.seg_out0[6]
seg_out1[0] <= scan:scan_m0.seg_out1[0]
seg_out1[1] <= scan:scan_m0.seg_out1[1]
seg_out1[2] <= scan:scan_m0.seg_out1[2]
seg_out1[3] <= scan:scan_m0.seg_out1[3]
seg_out1[4] <= scan:scan_m0.seg_out1[4]
seg_out1[5] <= scan:scan_m0.seg_out1[5]
seg_out1[6] <= scan:scan_m0.seg_out1[6]
seg_out2[0] <= scan:scan_m0.seg_out2[0]
seg_out2[1] <= scan:scan_m0.seg_out2[1]
seg_out2[2] <= scan:scan_m0.seg_out2[2]
seg_out2[3] <= scan:scan_m0.seg_out2[3]
seg_out2[4] <= scan:scan_m0.seg_out2[4]
seg_out2[5] <= scan:scan_m0.seg_out2[5]
seg_out2[6] <= scan:scan_m0.seg_out2[6]
seg_out3[0] <= scan:scan_m0.seg_out3[0]
seg_out3[1] <= scan:scan_m0.seg_out3[1]
seg_out3[2] <= scan:scan_m0.seg_out3[2]
seg_out3[3] <= scan:scan_m0.seg_out3[3]
seg_out3[4] <= scan:scan_m0.seg_out3[4]
seg_out3[5] <= scan:scan_m0.seg_out3[5]
seg_out3[6] <= scan:scan_m0.seg_out3[6]
seg_out4[0] <= scan:scan_m0.seg_out4[0]
seg_out4[1] <= scan:scan_m0.seg_out4[1]
seg_out4[2] <= scan:scan_m0.seg_out4[2]
seg_out4[3] <= scan:scan_m0.seg_out4[3]
seg_out4[4] <= scan:scan_m0.seg_out4[4]
seg_out4[5] <= scan:scan_m0.seg_out4[5]
seg_out4[6] <= scan:scan_m0.seg_out4[6]
seg_out5[0] <= scan:scan_m0.seg_out5[0]
seg_out5[1] <= scan:scan_m0.seg_out5[1]
seg_out5[2] <= scan:scan_m0.seg_out5[2]
seg_out5[3] <= scan:scan_m0.seg_out5[3]
seg_out5[4] <= scan:scan_m0.seg_out5[4]
seg_out5[5] <= scan:scan_m0.seg_out5[5]
seg_out5[6] <= scan:scan_m0.seg_out5[6]


|top|debouncing_button:db_m0
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => state_reg~1.DATAIN
rst_n => counter[0].ACLR
rst_n => counter[1].ACLR
rst_n => counter[2].ACLR
rst_n => counter[3].ACLR
rst_n => counter[4].ACLR
rst_n => counter[5].ACLR
rst_n => counter[6].ACLR
rst_n => counter[7].ACLR
rst_n => counter[8].ACLR
rst_n => counter[9].ACLR
rst_n => counter[10].ACLR
rst_n => counter[11].ACLR
rst_n => counter[12].ACLR
rst_n => counter[13].ACLR
rst_n => counter[14].ACLR
rst_n => counter[15].ACLR
rst_n => counter[16].ACLR
rst_n => counter[17].ACLR
rst_n => counter[18].ACLR
rst_n => counter[19].ACLR
rst_n => state_reg~3.DATAIN
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
db <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|debouncing_button:db_m1
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => state_reg~1.DATAIN
rst_n => counter[0].ACLR
rst_n => counter[1].ACLR
rst_n => counter[2].ACLR
rst_n => counter[3].ACLR
rst_n => counter[4].ACLR
rst_n => counter[5].ACLR
rst_n => counter[6].ACLR
rst_n => counter[7].ACLR
rst_n => counter[8].ACLR
rst_n => counter[9].ACLR
rst_n => counter[10].ACLR
rst_n => counter[11].ACLR
rst_n => counter[12].ACLR
rst_n => counter[13].ACLR
rst_n => counter[14].ACLR
rst_n => counter[15].ACLR
rst_n => counter[16].ACLR
rst_n => counter[17].ACLR
rst_n => counter[18].ACLR
rst_n => counter[19].ACLR
rst_n => state_reg~3.DATAIN
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
sw_low => state_nxt.OUTPUTSELECT
db <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|parking_lot_counter:lot_m0
clk => timer[0].CLK
clk => timer[1].CLK
clk => timer[2].CLK
clk => timer[3].CLK
clk => timer[4].CLK
clk => timer[5].CLK
clk => timer[6].CLK
clk => timer[7].CLK
clk => timer[8].CLK
clk => timer[9].CLK
clk => timer[10].CLK
clk => timer[11].CLK
clk => timer[12].CLK
clk => timer[13].CLK
clk => timer[14].CLK
clk => timer[15].CLK
clk => timer[16].CLK
clk => timer[17].CLK
clk => timer[18].CLK
clk => timer[19].CLK
clk => timer[20].CLK
clk => timer[21].CLK
clk => timer[22].CLK
clk => timer[23].CLK
clk => timer[24].CLK
clk => timer[25].CLK
clk => timer[26].CLK
clk => timer[27].CLK
clk => timer[28].CLK
clk => timer[29].CLK
clk => timer[30].CLK
clk => timer[31].CLK
clk => state_reg[0].CLK
clk => state_reg[1].CLK
clk => state_reg[2].CLK
clk => state_reg[3].CLK
clk => state_reg[4].CLK
clk => state_reg[5].CLK
clk => state_reg[6].CLK
clk => state_reg[7].CLK
clk => state_reg[8].CLK
clk => state_reg[9].CLK
clk => state_reg[10].CLK
clk => state_reg[11].CLK
clk => state_reg[12].CLK
clk => state_reg[13].CLK
clk => state_reg[14].CLK
clk => state_reg[15].CLK
clk => state_reg[16].CLK
clk => state_reg[17].CLK
clk => state_reg[18].CLK
clk => state_reg[19].CLK
clk => state_reg[20].CLK
clk => state_reg[21].CLK
clk => state_reg[22].CLK
clk => state_reg[23].CLK
clk => state_reg[24].CLK
clk => state_reg[25].CLK
clk => state_reg[26].CLK
clk => state_reg[27].CLK
clk => state_reg[28].CLK
clk => state_reg[29].CLK
clk => state_reg[30].CLK
clk => state_reg[31].CLK
rst_n => state_reg[0].ACLR
rst_n => state_reg[1].ACLR
rst_n => state_reg[2].ACLR
rst_n => state_reg[3].ACLR
rst_n => state_reg[4].ACLR
rst_n => state_reg[5].ACLR
rst_n => state_reg[6].ACLR
rst_n => state_reg[7].ACLR
rst_n => state_reg[8].ACLR
rst_n => state_reg[9].ACLR
rst_n => state_reg[10].ACLR
rst_n => state_reg[11].ACLR
rst_n => state_reg[12].ACLR
rst_n => state_reg[13].ACLR
rst_n => state_reg[14].ACLR
rst_n => state_reg[15].ACLR
rst_n => state_reg[16].ACLR
rst_n => state_reg[17].ACLR
rst_n => state_reg[18].ACLR
rst_n => state_reg[19].ACLR
rst_n => state_reg[20].ACLR
rst_n => state_reg[21].ACLR
rst_n => state_reg[22].ACLR
rst_n => state_reg[23].ACLR
rst_n => state_reg[24].ACLR
rst_n => state_reg[25].ACLR
rst_n => state_reg[26].ACLR
rst_n => state_reg[27].ACLR
rst_n => state_reg[28].ACLR
rst_n => state_reg[29].ACLR
rst_n => state_reg[30].ACLR
rst_n => state_reg[31].ACLR
rst_n => timer[0].ACLR
rst_n => timer[1].ACLR
rst_n => timer[2].ACLR
rst_n => timer[3].ACLR
rst_n => timer[4].ACLR
rst_n => timer[5].ACLR
rst_n => timer[6].ACLR
rst_n => timer[7].ACLR
rst_n => timer[8].ACLR
rst_n => timer[9].ACLR
rst_n => timer[10].ACLR
rst_n => timer[11].ACLR
rst_n => timer[12].ACLR
rst_n => timer[13].ACLR
rst_n => timer[14].ACLR
rst_n => timer[15].ACLR
rst_n => timer[16].ACLR
rst_n => timer[17].ACLR
rst_n => timer[18].ACLR
rst_n => timer[19].ACLR
rst_n => timer[20].ACLR
rst_n => timer[21].ACLR
rst_n => timer[22].ACLR
rst_n => timer[23].ACLR
rst_n => timer[24].ACLR
rst_n => timer[25].ACLR
rst_n => timer[26].ACLR
rst_n => timer[27].ACLR
rst_n => timer[28].ACLR
rst_n => timer[29].ACLR
rst_n => timer[30].ACLR
rst_n => timer[31].ACLR
a => always1.IN0
a => always1.IN0
a => always1.IN0
a => always1.IN0
b => always1.IN1
b => always1.IN1
b => always1.IN1
b => always1.IN1
enter <= Equal4.DB_MAX_OUTPUT_PORT_TYPE
exit <= Equal8.DB_MAX_OUTPUT_PORT_TYPE
led[0] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[1] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[2] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[3] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[4] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[5] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[6] <= led.DB_MAX_OUTPUT_PORT_TYPE
led[7] <= led.DB_MAX_OUTPUT_PORT_TYPE


|top|scan:scan_m0
seg_disp[0] => Decoder0.IN3
seg_disp[0] => LessThan0.IN8
seg_disp[1] => LessThan0.IN7
seg_disp[1] => Add0.IN6
seg_disp[1] => in0[1].DATAA
seg_disp[2] => LessThan0.IN6
seg_disp[2] => Add0.IN5
seg_disp[2] => in0[2].DATAA
seg_disp[3] => LessThan0.IN5
seg_disp[3] => Add0.IN4
seg_disp[3] => in0[3].DATAA
is_full => seg_out2[5].DATAIN
is_full => seg_out2[4].DATAIN
is_full => seg_out2[3].DATAIN
is_full => seg_out3[5].DATAIN
is_full => seg_out3[4].DATAIN
is_full => seg_out3[3].DATAIN
is_full => seg_out4[5].DATAIN
is_full => seg_out4[4].DATAIN
is_full => seg_out4[3].DATAIN
is_full => seg_out4[2].DATAIN
is_full => seg_out4[1].DATAIN
is_full => seg_out5[6].DATAIN
is_full => seg_out5[5].DATAIN
is_full => seg_out5[4].DATAIN
is_full => seg_out5[0].DATAIN
seg_out0[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg_out0[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg_out0[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg_out0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg_out0[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg_out0[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg_out0[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg_out1[0] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
seg_out1[1] <= <GND>
seg_out1[2] <= <GND>
seg_out1[3] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
seg_out1[4] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
seg_out1[5] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
seg_out1[6] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
seg_out2[0] <= <VCC>
seg_out2[1] <= <VCC>
seg_out2[2] <= <VCC>
seg_out2[3] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out2[4] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out2[5] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out2[6] <= <VCC>
seg_out3[0] <= <VCC>
seg_out3[1] <= <VCC>
seg_out3[2] <= <VCC>
seg_out3[3] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out3[4] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out3[5] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out3[6] <= <VCC>
seg_out4[0] <= <VCC>
seg_out4[1] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out4[2] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out4[3] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out4[4] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out4[5] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out4[6] <= <VCC>
seg_out5[0] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out5[1] <= <VCC>
seg_out5[2] <= <VCC>
seg_out5[3] <= <VCC>
seg_out5[4] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out5[5] <= is_full.DB_MAX_OUTPUT_PORT_TYPE
seg_out5[6] <= is_full.DB_MAX_OUTPUT_PORT_TYPE


